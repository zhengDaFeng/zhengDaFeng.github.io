<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>郑大峰的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhengdafeng.github.io/"/>
  <updated>2019-04-07T14:11:03.313Z</updated>
  <id>https://zhengdafeng.github.io/</id>
  
  <author>
    <name>Jeff Cheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分类器的应用示例（一）</title>
    <link href="https://zhengdafeng.github.io/2019/04/07/Halcon%20%E7%A4%BA%E4%BE%8B%20-%20%E5%88%86%E7%B1%BB%E5%99%A8%E7%9A%84%E5%BA%94%E7%94%A8%E7%A4%BA%E4%BE%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://zhengdafeng.github.io/2019/04/07/Halcon 示例 - 分类器的应用示例（一）/</id>
    <published>2019-04-07T13:42:00.000Z</published>
    <updated>2019-04-07T14:11:03.313Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;该示例通过对象的形状特征对金属部件进行分类。&lt;br&gt;
    
    </summary>
    
      <category term="Halcon 示例" scheme="https://zhengdafeng.github.io/categories/Halcon-%E7%A4%BA%E4%BE%8B/"/>
    
    
      <category term="Halcon" scheme="https://zhengdafeng.github.io/tags/Halcon/"/>
    
      <category term="分类器" scheme="https://zhengdafeng.github.io/tags/%E5%88%86%E7%B1%BB%E5%99%A8/"/>
    
      <category term="示例" scheme="https://zhengdafeng.github.io/tags/%E7%A4%BA%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>使用 HSmartWindowControl 控件</title>
    <link href="https://zhengdafeng.github.io/2019/03/27/Halcon%20&amp;&amp;%20C#%20-%20%E4%BD%BF%E7%94%A8%20HSmartWindowControl%20%E6%8E%A7%E4%BB%B6/"/>
    <id>https://zhengdafeng.github.io/2019/03/27/Halcon &amp;&amp; C# - 使用 HSmartWindowControl 控件/</id>
    <published>2019-03-27T03:21:00.000Z</published>
    <updated>2019-04-07T14:18:14.343Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;从 Halcon 13 开始，MvTech 提供了一个相比于 HWindowControl 更好的控件 – HSmartWindowControl。不过基于版权原因（网上的破解版只提供到 Halcon 12），该控件在各大自动化设备公司都鲜有使用。但是为什么会有新版控件问世呢？显然是为了提高开发效率并且修复相关BUG了，所以使用 HSmartWindowControl 是有意义的。&lt;br&gt;
    
    </summary>
    
      <category term="Halcon &amp;&amp; C#" scheme="https://zhengdafeng.github.io/categories/Halcon-C/"/>
    
    
      <category term="Halcon" scheme="https://zhengdafeng.github.io/tags/Halcon/"/>
    
      <category term="C#" scheme="https://zhengdafeng.github.io/tags/C/"/>
    
      <category term="HSmartWindowControl" scheme="https://zhengdafeng.github.io/tags/HSmartWindowControl/"/>
    
  </entry>
  
  <entry>
    <title>hexo &amp;&amp; aria 博文置顶</title>
    <link href="https://zhengdafeng.github.io/2019/03/26/hexo%20&amp;&amp;%20aria%20-%20%E5%8D%9A%E6%96%87%E7%BD%AE%E9%A1%B6/"/>
    <id>https://zhengdafeng.github.io/2019/03/26/hexo &amp;&amp; aria - 博文置顶/</id>
    <published>2019-03-26T02:53:00.000Z</published>
    <updated>2019-04-07T14:13:51.628Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;关于 hexo 框架的博文置顶信息，网上还是挺多的，但是一来大多方法比较繁琐，二来貌似没有关于 aria 主题的置顶信息，所以我经过实践，写了这个博文。&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="https://zhengdafeng.github.io/categories/Web/"/>
    
    
      <category term="hexo" scheme="https://zhengdafeng.github.io/tags/hexo/"/>
    
      <category term="aria theme" scheme="https://zhengdafeng.github.io/tags/aria-theme/"/>
    
      <category term="置顶" scheme="https://zhengdafeng.github.io/tags/%E7%BD%AE%E9%A1%B6/"/>
    
  </entry>
  
  <entry>
    <title>塑料物体表面缺陷检测</title>
    <link href="https://zhengdafeng.github.io/2019/03/25/Halcon%20%E7%A4%BA%E4%BE%8B%20-%20%E8%A1%A8%E9%9D%A2%E6%A3%80%E6%B5%8B%E7%9A%84%E5%BA%94%E7%94%A8%E7%A4%BA%E4%BE%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://zhengdafeng.github.io/2019/03/25/Halcon 示例 - 表面检测的应用示例（一）/</id>
    <published>2019-03-25T08:47:00.000Z</published>
    <updated>2019-04-07T14:19:56.699Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;例程：detect_indent_fft.hdev&lt;br&gt;说明：这个程序展示了如何利用快速傅里叶变换（FFT）对塑料制品的表面进行目标（缺陷）的检测。
    
    </summary>
    
      <category term="Halcon 示例" scheme="https://zhengdafeng.github.io/categories/Halcon-%E7%A4%BA%E4%BE%8B/"/>
    
    
      <category term="表面检测" scheme="https://zhengdafeng.github.io/tags/%E8%A1%A8%E9%9D%A2%E6%A3%80%E6%B5%8B/"/>
    
      <category term="塑料物体" scheme="https://zhengdafeng.github.io/tags/%E5%A1%91%E6%96%99%E7%89%A9%E4%BD%93/"/>
    
      <category term="快速傅里叶变换" scheme="https://zhengdafeng.github.io/tags/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2/"/>
    
  </entry>
  
  <entry>
    <title>我的技能</title>
    <link href="https://zhengdafeng.github.io/2019/03/25/Others%20-%20%E6%88%91%E7%9A%84%E6%8A%80%E8%83%BD/"/>
    <id>https://zhengdafeng.github.io/2019/03/25/Others - 我的技能/</id>
    <published>2019-03-25T05:41:00.000Z</published>
    <updated>2019-04-07T14:18:58.455Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;再忙也应该整理、总结自己的知识，不然一切都会变成过眼云烟。&lt;br&gt;
    
    </summary>
    
      <category term="Others" scheme="https://zhengdafeng.github.io/categories/Others/"/>
    
    
      <category term="个人信息" scheme="https://zhengdafeng.github.io/tags/%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>边缘检测</title>
    <link href="https://zhengdafeng.github.io/2019/03/25/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%20-%20%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/"/>
    <id>https://zhengdafeng.github.io/2019/03/25/图像处理 - 边缘检测/</id>
    <published>2019-03-25T05:37:00.000Z</published>
    <updated>2019-04-07T14:19:35.453Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;边缘检测（英语：Edge detection）标识数字图像中亮度变化明显的点。&lt;br&gt;
    
    </summary>
    
      <category term="图像处理" scheme="https://zhengdafeng.github.io/categories/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
      <category term="边缘检测" scheme="https://zhengdafeng.github.io/tags/%E8%BE%B9%E7%BC%98%E6%A3%80%E6%B5%8B/"/>
    
      <category term="canny" scheme="https://zhengdafeng.github.io/tags/canny/"/>
    
      <category term="sobel" scheme="https://zhengdafeng.github.io/tags/sobel/"/>
    
  </entry>
  
  <entry>
    <title>Halcon &amp;&amp; C# 联合编程时的内存管理</title>
    <link href="https://zhengdafeng.github.io/2019/03/19/Halcon%20&amp;&amp;%20C#%20-%20Halcon%20%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>https://zhengdafeng.github.io/2019/03/19/Halcon &amp;&amp; C# - Halcon 内存管理/</id>
    <published>2019-03-19T03:45:00.000Z</published>
    <updated>2019-04-07T14:18:10.492Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;C# 拥有强大的垃圾回收机制，这时优点，但有时候太过依赖它，反而会使我们失去了处理一些第三方对象的能力。而在 Halcon 与 C# 的联合编程中，Halcon 对象的内存管理便是很多人头痛的事情了。&lt;br&gt;
    
    </summary>
    
      <category term="Halcon &amp;&amp; C#" scheme="https://zhengdafeng.github.io/categories/Halcon-C/"/>
    
    
      <category term="Halcon" scheme="https://zhengdafeng.github.io/tags/Halcon/"/>
    
      <category term="C#" scheme="https://zhengdafeng.github.io/tags/C/"/>
    
      <category term="内存管理" scheme="https://zhengdafeng.github.io/tags/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>获取Byte[]类型数据的指针</title>
    <link href="https://zhengdafeng.github.io/2019/03/15/C#%20-%20%E8%8E%B7%E5%8F%96Byte%5B%5D%E7%B1%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E6%8C%87%E9%92%88/"/>
    <id>https://zhengdafeng.github.io/2019/03/15/C# - 获取Byte[]类型数据的指针/</id>
    <published>2019-03-15T06:25:00.000Z</published>
    <updated>2019-04-07T14:20:07.503Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;使用AVT相机SDK编程时，只能取回图像的Byte数据，而生成HImage需要图像数据的指针，所以需要这样的代码。&lt;br&gt;
    
    </summary>
    
      <category term="C#" scheme="https://zhengdafeng.github.io/categories/C/"/>
    
    
      <category term="指针" scheme="https://zhengdafeng.github.io/tags/%E6%8C%87%E9%92%88/"/>
    
      <category term="Byte数组" scheme="https://zhengdafeng.github.io/tags/Byte%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>在派生类中引发基类事件</title>
    <link href="https://zhengdafeng.github.io/2019/03/14/C#%20-%20%E5%9C%A8%E6%B4%BE%E7%94%9F%E7%B1%BB%E4%B8%AD%E5%BC%95%E5%8F%91%E5%9F%BA%E7%B1%BB%E4%BA%8B%E4%BB%B6/"/>
    <id>https://zhengdafeng.github.io/2019/03/14/C# - 在派生类中引发基类事件/</id>
    <published>2019-03-14T04:00:00.000Z</published>
    <updated>2019-04-07T14:14:47.413Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;首先，你必须知道以下规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;事件是特殊类型的委托，只能从声明它们的类中进行调用。 派生类不能直接调用在基类中声明的事件。&lt;/li&gt;
&lt;li&gt;不要在基类中声明虚拟事件并在派生类中重写它们。 C#编译器不会处理这些事件，并且无法预知派生事件的订阅者是否实际上会订阅基类事件。
    
    </summary>
    
      <category term="C#" scheme="https://zhengdafeng.github.io/categories/C/"/>
    
    
      <category term="C#" scheme="https://zhengdafeng.github.io/tags/C/"/>
    
      <category term="继承" scheme="https://zhengdafeng.github.io/tags/%E7%BB%A7%E6%89%BF/"/>
    
  </entry>
  
  <entry>
    <title>工厂模式</title>
    <link href="https://zhengdafeng.github.io/2019/03/14/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%20-%20%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F%E5%92%8C%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    <id>https://zhengdafeng.github.io/2019/03/14/设计模式 - 简单工厂模式和工厂模式/</id>
    <published>2019-03-14T02:44:00.000Z</published>
    <updated>2019-04-07T14:19:48.222Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近在写一款激光分析软件，其中有一项需求是支持多种品牌的相机取像，第一时间便想到了工厂模式。&lt;br&gt;
    
    </summary>
    
      <category term="设计模式" scheme="https://zhengdafeng.github.io/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="C#" scheme="https://zhengdafeng.github.io/tags/C/"/>
    
      <category term="设计模式" scheme="https://zhengdafeng.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="简单工厂模式" scheme="https://zhengdafeng.github.io/tags/%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="工厂模式" scheme="https://zhengdafeng.github.io/tags/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>类库项目中 HWindowControl 类型的声明异常</title>
    <link href="https://zhengdafeng.github.io/2019/03/13/Halcon%20&amp;&amp;%20C#%20-%20%E7%B1%BB%E5%BA%93%E9%A1%B9%E7%9B%AE%E4%B8%ADHWindowControl%E7%B1%BB%E5%9E%8B%E5%A3%B0%E6%98%8E%E9%97%AE%E9%A2%98/"/>
    <id>https://zhengdafeng.github.io/2019/03/13/Halcon &amp;&amp; C# - 类库项目中HWindowControl类型声明问题/</id>
    <published>2019-03-13T08:24:00.000Z</published>
    <updated>2019-04-07T14:18:19.571Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;在vs中新建&lt;strong&gt;类库项目&lt;/strong&gt;，添加HalconDotNet引用，使用HWindowControl定义变量。&lt;br&gt;
    
    </summary>
    
      <category term="Halcon &amp;&amp; C#" scheme="https://zhengdafeng.github.io/categories/Halcon-C/"/>
    
    
      <category term="Halcon" scheme="https://zhengdafeng.github.io/tags/Halcon/"/>
    
      <category term="HWindowControl" scheme="https://zhengdafeng.github.io/tags/HWindowControl/"/>
    
      <category term="C#" scheme="https://zhengdafeng.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>基于 GitHub Page &amp;&amp; Hexo &amp;&amp; Aria 的建站过程</title>
    <link href="https://zhengdafeng.github.io/2019/03/13/hexo%20&amp;&amp;%20aria%20-%20%E5%9F%BA%E4%BA%8EGitHub-Page-&amp;-Hexo-&amp;-Aria%E7%9A%84%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B/"/>
    <id>https://zhengdafeng.github.io/2019/03/13/hexo &amp;&amp; aria - 基于GitHub-Page-&amp;-Hexo-&amp;-Aria的建站过程/</id>
    <published>2019-03-13T05:46:00.000Z</published>
    <updated>2019-04-07T14:15:45.678Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;…说到底，还是喜欢折腾啊。&lt;br&gt;
    
    </summary>
    
      <category term="Web" scheme="https://zhengdafeng.github.io/categories/Web/"/>
    
    
      <category term="GitHub Page" scheme="https://zhengdafeng.github.io/tags/GitHub-Page/"/>
    
      <category term="Hexo" scheme="https://zhengdafeng.github.io/tags/Hexo/"/>
    
      <category term="Aria" scheme="https://zhengdafeng.github.io/tags/Aria/"/>
    
  </entry>
  
</feed>
